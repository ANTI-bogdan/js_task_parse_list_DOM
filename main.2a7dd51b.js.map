{"version":3,"sources":["scripts/main.js"],"names":["lists","document","getElementsByTagName","sortList","li","sortedList","sort","prev","index","Number","dataset","salary","replace","getEmployees","employeesList","map","list","name","innerText","position","age","sorterdList","ul","querySelector","innerHTML","join"],"mappings":";AAAA,aA8BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BA,IAAMA,EAAYC,EAAAA,SAASC,qBAAqB,OAEhD,SAASC,EAASC,GAKTC,OAJYD,EAAGE,KAAK,SAACC,EAAMC,GAChCC,OAAAA,OAAOD,EAAME,QAAQC,OAAOC,QAAQ,aAAc,KAChDH,OAAOF,EAAKG,QAAQC,OAAOC,QAAQ,aAAc,OAKvD,SAASC,EAAaT,GAUbU,OATeV,EAAGW,IAAI,SAACC,GAC5B,MAAA,CACEC,KAAMD,EAAKE,UACXC,SAAUH,EAAKN,QAAQS,SACvBR,OAAQK,EAAKN,QAAQC,OACrBS,IAAKJ,EAAKN,QAAQU,OAMxBjB,EAASH,GAET,IAAMqB,EAAcR,EAAab,GAE3BsB,EAAKrB,SAASsB,cAAc,MAElCD,EAAGE,UACCH,OAAAA,OAAAA,EAAYN,IAAI,SAACC,GAEDA,MAAAA,8BAAAA,OAAAA,EAAKG,SACPH,sBAAAA,OAAAA,EAAKL,OACRK,mBAAAA,OAAAA,EAAKI,IAEdJ,eAAAA,OAAAA,EAAKC,KANS,eAOTQ,KAAK,IARhB","file":"main.2a7dd51b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst lists = [...document.getElementsByTagName('li')];\n\nfunction sortList(li) {\n  const sortedList = li.sort((prev, index) => (\n    Number(index.dataset.salary.replace(/[^0-9.-]+/g, ''))\n    - Number(prev.dataset.salary.replace(/[^0-9.-]+/g, ''))));\n\n  return sortedList;\n};\n\nfunction getEmployees(li) {\n  const employeesList = li.map((list) => (\n    {\n      name: list.innerText,\n      position: list.dataset.position,\n      salary: list.dataset.salary,\n      age: list.dataset.age,\n    }\n  ));\n\n  return employeesList;\n}\nsortList(lists);\n\nconst sorterdList = getEmployees(lists);\n\nconst ul = document.querySelector('ul');\n\nul.innerHTML = `\n  ${sorterdList.map((list) => (`\n  <li\n    data-position=${list.position}\n    data-salary=${list.salary}\n    data-age=${list.age}\n  >\n    ${list.name}\n  </li>`)).join('')}\n`;\n"]}